user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    
    # Rate limiting tanımlaması
    # $binary_remote_addr - IP başına limitleme için
    # 10m - zone boyutu (yaklaşık 16,000 IP adresini tutabilir)
    # rate=10r/s - saniyede 10 istek
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    
    # Auth endpoint'leri için özel sıkı limit (brute force koruma)
    # saniyede sadece 3 istek
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=3r/s;
    
   
    # Bu, dakikada 1 istek, saatte 60 istek, günde 1440 istek anlamına gelir
    limit_req_zone $binary_remote_addr zone=daily_limit:20m rate=10
    0r/m;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip sıkıştırma
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 6;

    # Rate limiting uygulaması
    # burst=20 - kısa süreli aşımlara izin vermek için 20 ek istek
    # nodelay - istek hızı aşılırsa gecikme olmadan hemen 503 hatası döndür
    limit_req_status 429; # Aşım durumunda 429 Too Many Requests hatası döndür

    include /etc/nginx/conf.d/*.conf;
} 